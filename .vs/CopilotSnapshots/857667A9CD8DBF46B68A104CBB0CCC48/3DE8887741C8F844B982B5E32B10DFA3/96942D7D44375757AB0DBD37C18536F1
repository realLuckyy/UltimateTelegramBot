# 🤖 Ultimate Telegram Bot

A comprehensive Telegram bot with gamification features, economy system, referral program, and community management tools.

## ✨ Features

### 🎮 Gamification System
- **XP & Levels**: Users earn experience points and level up by posting content
- **Streaks**: Daily posting streaks with rewards and streak protection
- **Achievements**: Unlock badges for various milestones and activities
- **Leaderboards**: Daily, weekly, and all-time rankings

### 💰 Economy System
- **Coins**: Earn coins through posts, reactions, referrals, and achievements
- **Shop**: Purchase boosters, custom titles, streak protection, and more
- **Rewards**: Multiple ways to earn coins and special items

### 🤝 Referral Program
- **Referral Codes**: Unique codes for each user to invite friends
- **Bonuses**: Welcome bonuses for new members and milestone rewards for referrers
- **Tracking**: Complete referral statistics and progress tracking

### 🎯 Weekly Challenges
- **Rotating Challenges**: New set of challenges each week
- **Variety**: Photo spree, streak keeper, social butterfly, and more
- **Rewards**: Bonus coins for completing challenges

### 🛡️ Community Management
- **New Member Enforcement**: Automatic removal of inactive new members
- **Inactivity Policy**: Warning system for inactive users
- **Content Tracking**: Monitor different types of content (photos, videos, links)

### 📊 Analytics & Stats
- **Comprehensive Statistics**: Daily, weekly, and all-time stats
- **Content Analysis**: Track different content types and engagement
- **Reaction System**: Monitor and reward popular content

## 🚀 Quick Start

### Prerequisites
- Python 3.8 or higher
- A Telegram Bot Token (from [@BotFather](https://t.me/botfather))

### Installation

1. **Clone the repository**
   ```bash
   git clone https://github.com/realLuckyy/UltimateTelegramBot.git
   cd UltimateTelegramBot
   ```

2. **Install dependencies**
   ```bash
   pip install -r requirements.txt
   ```

3. **Configure the bot**
   - Open `UltimateTelegrambot.py`
   - Replace `"place_token_here"` with your actual bot token:
   ```python
   TOKEN = "your_bot_token_here"
   ```

4. **Run the bot**
   ```bash
   python UltimateTelegrambot.py
   ```

## 🔧 Setup with BotFather

### Creating Your Bot

1. **Start a conversation with BotFather**
   - Open Telegram and search for [@BotFather](https://t.me/botfather)
   - Start a conversation by clicking "Start"

2. **Create a new bot**
   ```
   /newbot
   ```
   - Follow the prompts to choose a name and username for your bot
   - **Name**: Can be anything (e.g., "My Ultimate Bot")
   - **Username**: Must end with "bot" (e.g., "myultimate_bot")

3. **Get your token**
   - BotFather will provide you with a token that looks like:
   ```
   123456789:ABCdefGHIjklMNOpqrsTUVwxyz
   ```
   - **Keep this token secure!**

4. **Configure bot settings (optional)**
   ```
   /mybots
   ```
   - Select your bot
   - Configure description, about text, and profile photo

### Required Bot Permissions

Make sure your bot has these permissions in your group:
- ✅ **Send Messages**
- ✅ **Delete Messages** 
- ✅ **Ban Users**
- ✅ **Read Message History**
- ✅ **Add Users to Group**

### Adding Bot to Group

1. Add your bot to the desired Telegram group
2. Make the bot an **Administrator** with the required permissions above
3. Send `/help` in the group to verify the bot is working

## 📋 Available Commands

### User Commands
| Command | Description |
|---------|-------------|
| `/help` | Show all available commands |
| `/rules` | Display group rules |
| `/profile` | Show complete user profile |
| `/level` | Show XP and current level |
| `/coins` | Show coin balance and active boosts |
| `/streak` | Show current posting streak |
| `/achievements` | Show unlocked achievements |
| `/badges` | Show available badges to unlock |
| `/stats` | Show daily group statistics |
| `/top` | Show today's top posters |
| `/leaderboard` | Show weekly leaderboard |
| `/ranking` | Show all-time rankings |
| `/reactions` | Show weekly reaction reports |
| `/challenges` | View active weekly challenges |
| `/shop` | Browse and buy items from the shop |
| `/title` | Manage custom titles |
| `/referral` | Manage referral code and stats |
| `/chatid` | Display group's Chat ID |

### Shop Items
- 🎖️ **Custom Badge** (200 coins) - Personalized profile badge
- ⚡ **XP Booster** (150 coins) - 2x XP for 24 hours
- 👑 **Custom Title** (300 coins) - Unlock custom title
- 🧊 **Streak Freeze** (100 coins) - Protect streak for 2 days
- 💰 **Coin Multiplier** (120 coins) - 2x coins for 12 hours
- 🤝 **Referral Booster** (180 coins) - 2x referral rewards for 48 hours

## ⚙️ Configuration

### Customizable Settings

Edit these variables in `UltimateTelegrambot.py`:

```python
# New member enforcement
NEW_MEMBER_POST_WINDOW = timedelta(hours=1)      # Time limit for new members
NEW_MEMBER_WARN_BEFORE = timedelta(minutes=15)   # Warning before deadline

# Inactivity policy
INACTIVITY_WARN_AT = timedelta(hours=48)         # Warn after 48h inactivity
INACTIVITY_KICK_AT = timedelta(hours=72)         # Kick after 72h inactivity

# Rewards
COIN_DAILY_POST = 10                             # Coins per post
COIN_STREAK_BONUS = 5                            # Bonus for streaks
COIN_REACTION_RECEIVED = 2                       # Coins per reaction
COIN_REFERRAL_SIGNUP = 50                        # Referral signup bonus
```

### Weekly Challenge Types
- 📸 **Photo Spree** - Share photos
- 🔥 **Streak Keeper** - Maintain posting streaks  
- 🦋 **Social Butterfly** - Get reactions
- 🎨 **Content Creator** - Post various content
- 🌅 **Early Bird** - Post during morning hours
- 🤝 **Referral Master** - Refer new members

## 🏗️ Architecture

### Core Components
- **State Management**: In-memory dictionaries for all bot data
- **Job Scheduler**: Automated tasks for enforcement and resets
- **Achievement System**: Dynamic badge unlocking
- **Economy Engine**: Coin distribution and shop system
- **Referral Engine**: Complete referral tracking and rewards

### Data Structures
- User activity tracking
- Content type categorization
- Streak calculation and protection
- Challenge progress monitoring
- Referral relationship mapping

## 📊 Statistics Tracking

The bot tracks comprehensive statistics including:
- Daily, weekly, and total post counts
- Content types (photos, videos, documents, links)
- User engagement and reaction data
- Streak histories and achievements
- Referral networks and success rates
- Challenge completion rates

## 🔒 Security Features

- **Input Validation**: All user inputs are properly sanitized
- **Rate Limiting**: Built-in protection against spam
- **Permission Checks**: Admin-only actions are protected
- **Error Handling**: Graceful handling of API failures
- **Data Persistence**: Automatic cleanup of stale data

## 🛠️ Development

### Project Structure
```
UltimateTelegramBot/
├── UltimateTelegrambot.py    # Main bot application
├── requirements.txt          # Python dependencies  
├── README.md                # Documentation
├── LICENSE                  # MIT License
├── .gitignore              # Git ignore rules
└── docs/                   # Additional documentation
    ├── SETUP.md            # Detailed setup guide
    ├── FEATURES.md         # Feature documentation
    └── API.md              # Command reference
```

### Contributing
1. Fork the repository
2. Create a feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## 📝 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## ☕ Support

If this project helps you, please consider:

- ⭐ **Star the repository** on GitHub
- 🐛 **Report bugs** via issues
- 💡 **Suggest features** for improvement
- 🤝 **Contribute code** through pull requests
- ☕ **[Buy me a coffee](https://ko-fi.com/root)** to support development

## 🆘 Need Help?

If you encounter any issues or have questions:

1. Check the [documentation](docs/)
2. Search existing [issues](https://github.com/realLuckyy/UltimateTelegramBot/issues)
3. Create a new issue with detailed information
4. Join our support group (if available)

## 🔄 Updates & Roadmap

### Recent Updates
- ✅ Referral system with milestone tracking
- ✅ Weekly challenges with rotating content
- ✅ Enhanced economy with boosters
- ✅ Comprehensive achievement system

### Upcoming Features
- 🔲 Database persistence (SQLite/PostgreSQL)
- 🔲 Web dashboard for statistics
- 🔲 Multi-language support
- 🔲 Custom challenge creation
- 🔲 Integration with external APIs
- 🔲 Advanced moderation tools

---

**Made with ❤️ for the Telegram community**

*This bot is designed to create engaging and active Telegram groups through gamification and community features.*

**Support Development:** ☕ [Buy me a coffee](https://ko-fi.com/root) ☕